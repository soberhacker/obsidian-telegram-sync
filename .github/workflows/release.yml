name: Release Obsidian plugin

env:
  PLUGIN_NAME: obsidian-telegram-sync

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:    
    runs-on: ubuntu-latest   
    if: ${{ github.event.head_commit.author.name != 'github-actions[bot]' }}        
    steps:       

      - name: Update version in CHANGELOG.md and package.json}}
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node  
          command: release-pr
          package-name: obsidian-telegram-sync          
          include-v-in-tag: false     
          pull-request-title-pattern: release ${version}   
          skip-labeling: true  
    
      - name: Checkout repository        
        if: ${{steps.release.outputs.pr}}
        uses: actions/checkout@v3              

      - name: Set up Node.js        
        if: ${{steps.release.outputs.pr}}
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"      

      - name: Update manifest.json and versions.json     
        if: ${{steps.release.outputs.pr}}   
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git fetch origin
          git checkout release-please--branches--main--components--obsidian-telegram-sync          
          npm ci          
          npm run version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          git commit -m "release $NEW_VERSION" 
          git push          

      - name: Update main.js        
        if: ${{steps.release.outputs.pr}}
        run: |
          npm run build

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files:  |
            main.js
            manifest.json
            styles.css            
          token: ${{ secrets.GITHUB_TOKEN }}          
          tag_name: ${{ env.NEW_VERSION }}          
          prerelease: false
          draft: false